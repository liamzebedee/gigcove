ALPHA
=====

Complete mobile UX sketch for:
 - homepage
 - gig page
 - submit gig
Body copy for About, Help Out
Implement mobile:
 - homepage
 - gig page
Implement desktop
 - homepage
 - gig page
 - submit gig
Implement web crawler


Then continue with implementing
- search page to show list of gigs
- each individual gig page
- post a gig page
Then mobile versions































KEEP IT MINIMAL AND ITERATIVE RELEASES
Focus on two things:
 1. Progress
 2. Marketing

Make it easy to post/search for gigs


key aspects of gigs after search:















MARKETING
 - schema.org
 - OpenGraph
 - Add Twitter/Facebook


 - add 'share' button to gigs
   https://developers.facebook.com/docs/plugins/share-button
 - add bg photo to gig event
 - add photos from instagram http://instagram.com/developer/realtime/
 - feedback form
 - fix mapping so that we always prompt the user for the correct address
 - fix facebook login


MOBILE APP!


beta
 - add artist pages with mgmt functions
 - add venue pages with mgmt functions
 - rating
 - add 'going' to gig pages
 - add ratings
 - instagram use code to re-request access_token 
 http://instagram.com/developer/authentication/ - server side explicit auth
 http://stackoverflow.com/questions/12563259/ruby-on-rails-thread-execution-and-logging


Testing
Instagram.client.create_subscription(:object => 'tag', :callback_url => Rails.application.routes.url_helpers.instagram_subscription_callback_url, :aspect => "media", :object_id => "selfie")


curl -F 'client_id=dd175e9ccb5247a3af84707ca4a420f3' \
     -F 'client_secret=b1ebf646b4754449a340e81283af05b8' \
     -F 'object=tag' \
     -F 'aspect=media' \
     -F 'object_id=nofilter' \
     -F 'callback_url=http://gigcove.com/instagram/subscription_callback' \
     https://api.instagram.com/v1/subscriptions/

lat=-27.443747&lng=153.1718943

{
      "latitude": -27.443454,
      "id": "116826064",
      "longitude": 153.171466,
      "name": "St Peters Church Hall"
    },

instagram only allows searching by recent in location/geography or tag, not both
since the load would be smaller, try using #gigcove and filtering by location
use streaming api
distribute to each gig for moderation

http://instagram.com/developer/endpoints/tags/










________________________

https://cloud.digitalocean.com/login
https://manage.www.namecheap.com/myaccount/sslcert/sslInfo.aspx?cid=553327
http://askubuntu.com/questions/134725/setup-dkim-domainkeys-for-ubuntu-postfix-and-mailman